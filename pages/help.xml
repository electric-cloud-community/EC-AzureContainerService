<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta content="text/html; charset=us-ascii" http-equiv="content-type"/>
    <title>@PLUGIN_KEY@ Plugin</title>
    <link rel="stylesheet" href="../../plugins/@PLUGIN_NAME@/pluginhelp.css" type="text/css" media="screen"/>
</head>
<body>
<!--
    Generated by PluginWizardHelp
    https://github.com/electric-cloud/PluginWizardHelp
    Do *NOT* edit manually, use help file generation.
-->
<div class="help">
    <h1>@PLUGIN_KEY@</h1>
    <p>Plugin version @PLUGIN_VERSION@</p>
    <hr style="margin-left: -10px; margin-top: 10px; height: 1px; width: 100%; color: #5981BD;" noshade="noshade"/>
    <h3>Overview</h3>
    <p><p>Plugin overview EC-AzureContainerService plugin integrates with the Azure Container Service to run Docker containers on the Azure Cloud Platform using Kubernetes.</p>
</p>
    
    <h1>Contents</h1>
    <ul>
    <li><a href="#overview">Overview</a></li>
    
    <li><a href="#CreateConfiguration">Plugin Configuration</a></li>
    
    <li><a href="#procedures">Plugin Procedures</a></li>
    <ul>
        

        <li><a href="#ProvisionCluster">Provision Cluster</a></li>
        

        <li><a href="#DeployService">Deploy Service</a></li>
        

        <li><a href="#UndeployService">Undeploy Service</a></li>
        
    </ul>
    
    
    <li><a href="#releaseNotes">Release Notes</a></li>
</ul>
    
    <div id="CreateConfiguration">
        <a name='CreateConfiguration' id="CreateConfiguration"> </a>
        <h2>Plugin Configurations</h2>

        <p>
            Plugin configurations are sets of parameters that apply
            across some or all of the plugin procedures. They
            reduce repetition of common values, create
            predefined parameter sets for end users, and
            securely store credentials where needed. Each configuration
            is given a unique name that is entered in designated
            parameters on procedures that use them.<br /><br />
        </p>

        <h3>Creating Plugin Configurations</h3>
        <p>To create plugin configurations in ElectricFlow,
            do these steps:</p>

        <li>Go to <b>Administration</b> &gt; <b>Plugins</b> to open the Plugin Manager.</li>
        <li>Find the @PLUGIN_NAME@ row.</li>
        <li>Click <b>Configure</b> to open the
             Configurations page.</li>
        <li>Click <b>Create Configuration</b>.</li>
        
        <h4>Prerequisites</h4>
<ol>
<li>EC-Kubernetes plugin version 1.0.5 or higher</li>
<li>Retrieve the &quot;Subscription ID&quot; of the account. (
<a href="https://blogs.msdn.microsoft.com/mschray/2015/05/13/getting-your-azure-guid-subscription-id/" target="_blank">https://blogs.msdn.microsoft.com/mschray/2015/05/13/getting-your-azure-guid-subscription-id/</a>
)
<ul>
<li>Go to:  
<a href="http://manage.windowsazure.com/" target="_blank">http://manage.windowsazure.com/</a>
</li>
<li>Scroll all the way down the left nav</li>
<li>Click settings</li>
<li>Copy you GUID</li>
</ul>
</li>
<li>You also need &quot;Client ID&quot;, &quot;Tenant ID&quot; and a &quot;Key&quot; (password) for a registered service principal. (
<a href="https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-group-create-service-principal-portal" target="_blank">https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-group-create-service-principal-portal</a>
)
<ol>
<li>Required permissions
<ul>
<li>Check Azure Active Directory permissions
<ol>
<li>Select Azure Active Directory.</li>
<li>In Azure Active Directory, select User settings.</li>
<li>Check the App registrations setting. If set to Yes, non-admin users can register AD apps. This setting means any user in the Azure AD tenant can register an app. You can proceed to Check Azure subscription permissions.</li>
<li>If the app registrations setting is set to No, only admin users can register apps. Check whether your account is an admin for the Azure AD tenant. Select Overview and look at your user information. If your account is assigned to the User role, but the app registration setting (from the preceding step) is limited to admin users, ask your administrator to either assign you to an administrator role, or to enable users to register apps.</li>
</ol>
</li>
<li>Check Azure subscription permissions
<ol>
<li>Select your account in the upper right corner, and select My permissions.</li>
<li>From the drop-down list, select the subscription. Select Click here to view complete access details for this subscription.</li>
<li>View your assigned roles, and determine if you have adequate permissions to assign an AD app to a role. If not, ask your subscription administrator to add you to User Access Administrator role. In the following image, the user is assigned to the Owner role, which means that user has adequate permissions.</li>
</ol>
</li>
</ul>
</li>
<li>Create an Azure Active Directory application
<ol>
<li>Log in to your Azure Account through the Azure portal (
<a href="https://portal.azure.com/" target="_blank">https://portal.azure.com/</a>
).</li>
<li>Select Azure Active Directory.</li>
<li>Select App registrations.</li>
<li>Select New application registration.</li>
<li>Provide a name and URL for the application. Select Web app / API for the type of application you want to create. You cannot create credentials for a Native application (
<a href="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-application-proxy-native-client" target="_blank">https://docs.microsoft.com/en-us/azure/active-directory/active-directory-application-proxy-native-client</a>
); therefore, that type does not work for an automated application. After setting the values, select Create.</li>
<li>You have created your application.</li>
</ol>
</li>
<li>Get application ID and authentication key
<ol>
<li>From App registrations in Azure Active Directory, select your application.</li>
<li>Copy the Application ID and store it in your application code. Some sample applications refer to this value as the client ID.</li>
<li>To generate an authentication key, select Settings.</li>
<li>To generate an authentication key, select Keys.</li>
<li>Provide a description of the key, and a duration for the key. When done, select Save.</li>
<li>After saving the key, the value of the key is displayed. Copy this value because you are not able to retrieve the key later. You provide the key value with the application ID to log in as the application. Store the key value where your application can retrieve it.</li>
</ol>
</li>
<li>Get tenant ID
<ol>
<li>Select Azure Active Directory.</li>
<li>To get the tenant ID, select Properties for your Azure AD tenant.</li>
<li>Copy the Directory ID. This value is your tenant ID.</li>
</ol>
</li>
<li>Assign application to role
<ol>
<li>Navigate to the level of scope you wish to assign the application to. For example, to assign a role at the subscription scope, select Subscriptions. You could instead select a resource group or resource.</li>
<li>Select the particular subscription (resource group or resource) to assign the application to.</li>
<li>Select Access Control (IAM).</li>
<li>Select Add.</li>
<li>Select the role you wish to assign to the application. The following image shows the Reader role.</li>
<li>By default, Azure Active Directory applications aren't displayed in the available options. To find your application, you must provide the name of it in the search field. Select it.</li>
<li>Select Save to finish assigning the role. You see your application in the list of users assigned to a role for that scope.</li>
</ol>
</li>
</ol>
</li>
</ol>
<h4>EC - preparatory steps</h4>
<ol>
<li>Upload the plugin</li>
<li>Create the environment with appropriate configuration values.
<ul>
<li>Configuration: ec_plugin_cnfgs</li>
<li>Container Cluster Name: test-poc</li>
<li>Resource Group Name: ec-test</li>
<li>Orchestrator Type: kubernetes</li>
<li>Master Zone: westus</li>
<li>Admin User Name: ecloudadmin</li>
<li>Number Of Master VMs: 1</li>
<li>Master DNS Prefix: tmaster</li>
<li>Master FQDN: testmaster</li>
<li>Master VM Size: Standard_D2</li>
<li>Agent Pool Name: agenttest</li>
<li>Agent Pool Count: 3</li>
<li>Agent Pool VM Size: Standard_D2</li>
<li>Agent DNS Prefix: tagent</li>
<li>The wait time for cluster creation (In minutes): 8</li>
</ul>
</li>
<li>Create the configuration - you can utilise the information we retrieved from Azure portal in prerequisite steps. You will also need a SSH keypair, the public part of key is placed on VMs that are created and private key is used to communicate with machines via SSH by plugin .This is also a good step to validate that the service principal etc. have been created as needed by &quot;test connection&quot; option available:
<ul>
<li>Configuration: az_conf</li>
<li>Description: EC-AzureContainerService</li>
<li>Tenant ID: your Tenant ID</li>
<li>Subscription ID: your Subscription ID</li>
<li>Service Principal Details:
<ul>
<li>Client ID: your Client ID</li>
<li>Private Key: your Private key</li>
</ul>
</li>
<li>Public Key: your Public key</li>
<li>Private Key:
<ul>
<li>User Name: Service Principal Details -&gt;  Private Key</li>
<li>Private Key: RSA private key</li>
</ul>
</li>
</ul>
</li>
</ol>

        
        Configuration Parameters
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration</td>
                <td>Unique name for the plugin configuration.</td>
            </tr>
            
            <tr>
                <td >Description</td>
                <td>Description for the plugin configuration.</td>
            </tr>
            
            <tr>
                <td class="required">Tenant ID</td>
                <td>Tenant ID of the Azure Account</td>
            </tr>
            
            <tr>
                <td class="required">Subscription ID</td>
                <td>Subscription ID of the Azure Account</td>
            </tr>
            
            <tr>
                <td class="required">Service Principal Details</td>
                <td>The Client ID and the Key of the Service principal created in Azure.</td>
            </tr>
            
            <tr>
                <td >Public Key</td>
                <td>The public key that should be used for cluster creation and communication.</td>
            </tr>
            
            <tr>
                <td class="required">Private Key</td>
                <td>The private key that should be used for cluster creation and communication.</td>
            </tr>
            
            <tr>
                <td >Test Connection?</td>
                <td>Test that the given service account details can be used to successfully connect to the cluster in Azure Container Service.</td>
            </tr>
            
            <tr>
                <td >Log Level</td>
                <td>Log level to use for logging output. Error=4, Warning=3, Info=2, Debug=1.</td>
            </tr>
            
            </tbody>
        </table>
        
        <h3>Make a remote connection to a Kubernetes, DC/OS, or Docker Swarm cluster</h3>
<p>After creating an Azure Container Service cluster, you need to connect to the cluster to deploy and manage workloads. This article describes how to connect to the master VM of the cluster from a remote computer.</p>
<p>The Kubernetes, DC/OS, and Docker Swarm clusters provide HTTP endpoints locally. For Kubernetes, this endpoint is securely exposed on the internet, and you can access it by running the kubectl command-line tool from any internet-connected machine.</p>
<p>For DC/OS and Docker Swarm, we recommend that you create a secure shell (SSH) tunnel from your local computer to the cluster management system. After the tunnel is established, you can run commands which use the HTTP endpoints and view the orchestrator's web interface (if available) from your local system.</p>
<h4>Prerequisites</h4>
<ul>
<li>A Kubernetes cluster deployed in Azure Container Service.</li>
<li>SSH RSA private key file, corresponding to the public key added to the cluster during deployment. These commands assume that the private SSH key is in $HOME/.ssh/id_rsa on your computer. See these instructions for macOS and Linux or Windows for more information. If the SSH connection isn't working, you may need to reset your SSH keys.</li>
</ul>
<h3>Connect to a Kubernetes cluster</h3>
<p>Follow these steps to install and configure kubectl on your computer.</p>
<h6>Note</h6>
<p>On Linux or macOS, you might need to run the commands in this section using sudo.</p>
<h5>Install kubectl</h5>
<p>One way to install this tool is to use the az acs kubernetes install-cli Azure CLI 2.0 command. To run this command, make sure that you installed the latest Azure CLI 2.0 and logged in to an Azure account (az login).</p>
<p>Linux or macOS</p>
<ul>
<li>az acs kubernetes install-cli [--install-location=/some/directory/kubectl]</li>
</ul>
<p>Windows</p>
<ul>
<li>az acs kubernetes install-cli [--install-location=C:\some\directory\kubectl.exe]</li>
</ul>
<p>Alternatively, you can download the latest kubectl client directly from the Kubernetes releases page.</p>
<h5>Download cluster credentials</h5>
<p>Once you have kubectl installed, you need to copy the cluster credentials to your machine. One way to do get the credentials is with the az acs kubernetes get-credentials command. Pass the name of the resource group and the name of the container service resource:</p>
<p>Azure CLI</p>
<ul>
<li>'az acs kubernetes get-credentials --resource-group=(cluster-resource-group) --name=(cluster-name)'</li>
</ul>
<p>This command downloads the cluster credentials to $HOME/.kube/config, where kubectl expects it to be located.</p>
<p>Alternatively, you can use scp to securely copy the file from $HOME/.kube/config on the master VM to your local machine. For example:</p>
<p>bash</p>
<ul>
<li>mkdir $HOME/.kube</li>
<li>scp azureuser@(master-dns-name):.kube/config $HOME/.kube/config</li>
</ul>
<p>If you are on Windows, you can use Bash on Ubuntu on Windows, the PuTTy secure file copy client, or a similar tool.</p>
<h5>Use kubectl</h5>
<p>Once you have kubectl configured, test the connection by listing the nodes in your cluster:</p>
<p>bash</p>
<ul>
<li>kubectl get nodes</li>
</ul>
<p>You can try other kubectl commands. For example, you can view the Kubernetes Dashboard. First, run a proxy to the Kubernetes API server:</p>
<p>bash</p>
<ul>
<li>kubectl proxy</li>
</ul>
<p>The Kubernetes UI is now available at: localhost:8001/ui.</p>
<p>For more information, see the Kubernetes quick start.</p>

        
    </div>
    

    <h1 id="procedures">Plugin Procedures</h1>
    

    
    <div id="ProvisionCluster">
        <h2>Provision Cluster</h2>
        <p>Provisions a Azure Container Service cluste. Pods, services, and replication controllers all run on top of a cluster.</p>
        
            <p>IMPORTANT: For all parameter descriptions below, required parameters are shown in bold italics. Please note that some of names given in ElectricFlow UI will be modified to comply with the naming conventions of Kubernetes. Specifically characters such as &quot;space , _ &quot; will be converted to &quot;-&quot;. Such parameters are marked with an asterisk (*).</p>

        
        <h3>Provision Cluster Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration</td>
                <td>The name of an existing configuration which holds all the connection information for Azure Container Service.</td>
            </tr>
            
            <tr>
                <td class="required">Container Cluster Name</td>
                <td>The name of the cluster that needs to be provisioned.</td>
            </tr>
            
            <tr>
                <td class="required">Resource Group Name</td>
                <td>All cluster resources will be created under this resource group name.</td>
            </tr>
            
            <tr>
                <td >Orchestrator Type</td>
                <td>The orchestrator to use for provisioning cluster.</td>
            </tr>
            
            <tr>
                <td class="required">Master Zone</td>
                <td>The primary zone for the cluster. The master zone for a cluster is set at creation time and cannot be updated so this parameter will be ignored if the cluster already exists.</td>
            </tr>
            
            <tr>
                <td >Admin User Name</td>
                <td>The name of Administrator user for VMs</td>
            </tr>
            
            <tr>
                <td class="required">Number Of Master VMs</td>
                <td>The number of masters to be created in the cluster. Values allowed are 1, 3 or 5 with 1 as default.</td>
            </tr>
            
            <tr>
                <td class="required">Master DNS Prefix</td>
                <td>The DNS prefix to be used to create the FQDN of the master</td>
            </tr>
            
            <tr>
                <td class="required">Master FQDN</td>
                <td>FQDN of the master</td>
            </tr>
            
            <tr>
                <td >Master VM Size</td>
                <td>Size of the Master VM. It has to be one of sizes listed here: https://docs.microsoft.com/en-us/azure/virtual-machines/virtual-machines-windows-sizes</td>
            </tr>
            
            <tr>
                <td class="required">Agent Pool Name</td>
                <td>The name of agent pool in which agents will be created</td>
            </tr>
            
            <tr>
                <td class="required">Agent Pool Count</td>
                <td>Number of agents that should be created in the pool</td>
            </tr>
            
            <tr>
                <td class="required">Agent Pool VM Size</td>
                <td>Size of the Agent VM. It has to be one of sizes listed here: https://docs.microsoft.com/en-us/azure/virtual-machines/virtual-machines-windows-sizes</td>
            </tr>
            
            <tr>
                <td class="required">Agent DNS Prefix</td>
                <td>DNS prefix to be used to create the FQDN of agent pool</td>
            </tr>
            
            <tr>
                <td class="required">The wait time for cluster creation (In minutes)</td>
                <td>Timeout for cluster creation. If the cluster does not get created in this amount of time, the procedure fails.</td>
            </tr>
            
            <tr>
                <td >Time for cluster preparation after creation (In Seconds)</td>
                <td>After the cluster is created it need to create service accounts etc. which can take a few seconds before services can be deployed</td>
            </tr>
            
            </tbody>
        </table>
        
    </div>

    
    <div id="DeployService">
        <h2>Deploy Service</h2>
        <p>Creates or updates a Deployment to bring up a Replica Set and Pods.</p>
        
        <h3>Deploy Service Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Service Name</td>
                <td>The name of the service in ElectricFlow that encapsulates the service to be deployed on the Azure Container Service.</td>
            </tr>
            
            <tr>
                <td >Service Revision ID</td>
                <td>Revision Id of the service in ElectricFlow.</td>
            </tr>
            
            <tr>
                <td class="required">Project Name</td>
                <td>The name of the project that the service belongs to. In case of an application-level service it also owns the application.</td>
            </tr>
            
            <tr>
                <td >Application Name</td>
                <td>The name of the application that the service belongs to. Not applicable for a top-level service.</td>
            </tr>
            
            <tr>
                <td >Application Revision ID</td>
                <td>Revision Id of the application version that the service belongs to.</td>
            </tr>
            
            <tr>
                <td class="required">Cluster Name</td>
                <td>The name of the cluster in ElectricFlow that encapsulates the Azure Container Service on which the service is to be deployed.</td>
            </tr>
            
            <tr>
                <td >Cluster Or Environment Project Name</td>
                <td>The name of the project that the cluster belongs to if it is a top-level project cluster. Or the name of the project that the environment belongs to if it is an environment-scoped cluster.</td>
            </tr>
            
            <tr>
                <td >Environment Name</td>
                <td>The name of the environment that the cluster belongs to. Not applicable for a top-level project cluster.</td>
            </tr>
            
            <tr>
                <td >Results Property Sheet</td>
                <td>Name of the property sheet where the output properties for the deployed service will be saved. If not specified, will default to '/myParent/parent'.</td>
            </tr>
            
            </tbody>
        </table>
        
    </div>

    
    <div id="UndeployService">
        <h2>Undeploy Service</h2>
        <p>Undeploys a previously deployed service on the Azure Container Service</p>
        
        <h3>Undeploy Service Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Service Name</td>
                <td>The name of the service in ElectricFlow that encapsulates the service that was previously deployed on the Azure Container Service.</td>
            </tr>
            
            <tr>
                <td >Service Revision ID</td>
                <td>Revision Id of the service in ElectricFlow.</td>
            </tr>
            
            <tr>
                <td class="required">Project Name</td>
                <td>The name of the project that the service belongs to. In case of an application-level service it also owns the application.</td>
            </tr>
            
            <tr>
                <td >Application Name</td>
                <td>The name of the application that the service belongs to. Not applicable for a top-level service.</td>
            </tr>
            
            <tr>
                <td >Application Revision ID</td>
                <td>Revision Id of the application version that the service belongs to.</td>
            </tr>
            
            <tr>
                <td class="required">Environment Name</td>
                <td>The name of the environment that the cluster belongs to.</td>
            </tr>
            
            <tr>
                <td >Environment Project Name</td>
                <td>The name of the project that the environment belongs to. If not specified, the environment is assumed to be in the same project as the service.</td>
            </tr>
            
            <tr>
                <td >Cluster Name</td>
                <td>The name of the cluster in the environment on which the service was previously deployed. If not specified, the application tier mapping will be used to find the cluster name.</td>
            </tr>
            
            </tbody>
        </table>
        
    </div>

    

    

    

    <h1 id="releaseNotes">Release Notes</h1>
    
    <h3>@PLUGIN_KEY@ 1.0.5</h3>
    <ul>
        
        <li>Configured the plugin to allow the ElectricFlow UI to render the plugin procedure parameters entirely using the configured form XMLs.</li>
        
        <li>Enabled the plugin for managing the plugin configurations in-line when defining an application process step or a pipeline stage task.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 1.0.3</h3>
    <ul>
        
        <li>Fixed the invalid credential name error in the <i>Undeploy Service</i> procedure.</li>
        
        <li>Configured the 'setup' procedure step that retrieves groovy dependency jars to run all subsequent procedure steps on the same resource.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 1.0.2</h3>
    <ul>
        
        <li>Added procedure <i>Undeploy Service</i> to undeploy a previously deployed service.</li>
        
        <li>EC-AzureContainerService plugin is now able to provision clusters in any specified region.</li>
        
        <li>Added parameter <i>masterVmsize</i> to specify the size for the master VM in the Kubernetes cluster provisioned by Azure Container Service.</li>
        
        <li>Removed unused parameter <i>additionalAttributes</i> from container mapping configuration.</li>
        
        <li>When deploying a microservice through ElectricFlow on a Kubernetes cluster provisioned by Azure Container Service, the plugin will now monitor the deployment progress in the cluster and cause the step to fail in case the deployment does not complete within the deployment timeout configured as part of the service mapping. The default timeout value is 120 seconds.</li>
        
        <li>When deploying a microservice through ElectricFlow on a Kubernetes cluster provisioned by Azure Container Service, the service name to use in the cluster can now be overridden through the service mapping.</li>
        
        <li>When deploying a microservice through ElectricFlow on a Kubernetes cluster provisioned by Azure Container Service, the deployment name to use in the cluster can now be overridden through the service mapping. See section <b>Blue/Green Deployments</b> in the EC-Kubernetes plugin help for details on how this ability can be used to implement a blue/green deployment strategy.</li>
        
        <li>Added support for canary deployments. See section <b>Canary Deployments</b> in the EC-Kubernetes plugin help for details.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 1.0.1</h3>
    <ul>
        
        <li>Updated the <i>Define Service</i> procedure to include namespace and service type parameters. This procedure is an internal procedure used for specifying cluster specific service mappings in ElectricFlow.</li>
        
        <li>Fixed the <i>Test Connection</i> step in the <i>Create Configuration</i> procedure.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 1.0.0</h3>
    <ul>
        
        <li>First release.</li>
        
    </ul>
    
</div>
</body>
</html>
